Start testing: Nov 27 11:00 PST
----------------------------------------------------------
1/61 Testing: Cave.OneMove
1/61 Test: Cave.OneMove
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.OneMove"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.OneMove" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.OneMove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.OneMove
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneMove/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneMove/output.txt
[       OK ] Cave.OneMove (562 ms)
[----------] 1 test from Cave (562 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (562 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.56 sec
----------------------------------------------------------
Test Passed.
"Cave.OneMove" end time: Nov 27 11:00 PST
"Cave.OneMove" time elapsed: 00:00:00
----------------------------------------------------------

2/61 Testing: Cave.TwoMoves
2/61 Test: Cave.TwoMoves
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.TwoMoves"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.TwoMoves" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.TwoMoves
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.TwoMoves
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/TwoMoves/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/TwoMoves/output.txt
[       OK ] Cave.TwoMoves (577 ms)
[----------] 1 test from Cave (577 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (577 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.58 sec
----------------------------------------------------------
Test Passed.
"Cave.TwoMoves" end time: Nov 27 11:00 PST
"Cave.TwoMoves" time elapsed: 00:00:00
----------------------------------------------------------

3/61 Testing: Cave.OneTripEW
3/61 Test: Cave.OneTripEW
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.OneTripEW"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.OneTripEW" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.OneTripEW
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.OneTripEW
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripEW/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripEW/output.txt
[       OK ] Cave.OneTripEW (574 ms)
[----------] 1 test from Cave (574 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (574 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.58 sec
----------------------------------------------------------
Test Passed.
"Cave.OneTripEW" end time: Nov 27 11:00 PST
"Cave.OneTripEW" time elapsed: 00:00:00
----------------------------------------------------------

4/61 Testing: Cave.OneTripWE
4/61 Test: Cave.OneTripWE
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.OneTripWE"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.OneTripWE" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.OneTripWE
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.OneTripWE
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripWE/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripWE/output.txt
[       OK ] Cave.OneTripWE (583 ms)
[----------] 1 test from Cave (583 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (583 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.59 sec
----------------------------------------------------------
Test Passed.
"Cave.OneTripWE" end time: Nov 27 11:00 PST
"Cave.OneTripWE" time elapsed: 00:00:00
----------------------------------------------------------

5/61 Testing: Cave.OneTripNS
5/61 Test: Cave.OneTripNS
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.OneTripNS"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.OneTripNS" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.OneTripNS
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.OneTripNS
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripNS/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/OneTripNS/output.txt
[       OK ] Cave.OneTripNS (588 ms)
[----------] 1 test from Cave (588 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (588 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.59 sec
----------------------------------------------------------
Test Passed.
"Cave.OneTripNS" end time: Nov 27 11:00 PST
"Cave.OneTripNS" time elapsed: 00:00:00
----------------------------------------------------------

6/61 Testing: Cave.SmallLoop
6/61 Test: Cave.SmallLoop
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.SmallLoop"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.SmallLoop" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.SmallLoop
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.SmallLoop
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/SmallLoop/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/SmallLoop/output.txt
[       OK ] Cave.SmallLoop (640 ms)
[----------] 1 test from Cave (640 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (640 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.64 sec
----------------------------------------------------------
Test Passed.
"Cave.SmallLoop" end time: Nov 27 11:00 PST
"Cave.SmallLoop" time elapsed: 00:00:00
----------------------------------------------------------

7/61 Testing: Cave.LargeLoop
7/61 Test: Cave.LargeLoop
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.LargeLoop"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.LargeLoop" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.LargeLoop
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.LargeLoop
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/LargeLoop/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/LargeLoop/output.txt
[       OK ] Cave.LargeLoop (571 ms)
[----------] 1 test from Cave (571 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (572 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.57 sec
----------------------------------------------------------
Test Passed.
"Cave.LargeLoop" end time: Nov 27 11:00 PST
"Cave.LargeLoop" time elapsed: 00:00:00
----------------------------------------------------------

8/61 Testing: Cave.LoopRetrace
8/61 Test: Cave.LoopRetrace
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.LoopRetrace"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.LoopRetrace" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.LoopRetrace
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.LoopRetrace
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/LoopRetrace/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/LoopRetrace/output.txt
[       OK ] Cave.LoopRetrace (582 ms)
[----------] 1 test from Cave (582 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (582 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.58 sec
----------------------------------------------------------
Test Passed.
"Cave.LoopRetrace" end time: Nov 27 11:00 PST
"Cave.LoopRetrace" time elapsed: 00:00:00
----------------------------------------------------------

9/61 Testing: Cave.Branching
9/61 Test: Cave.Branching
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.Branching"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.Branching" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.Branching
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.Branching
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/Branching/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/Branching/output.txt
[       OK ] Cave.Branching (556 ms)
[----------] 1 test from Cave (556 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (556 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.56 sec
----------------------------------------------------------
Test Passed.
"Cave.Branching" end time: Nov 27 11:00 PST
"Cave.Branching" time elapsed: 00:00:00
----------------------------------------------------------

10/61 Testing: Cave.RightMovesWrongOrder
10/61 Test: Cave.RightMovesWrongOrder
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=Cave.RightMovesWrongOrder"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"Cave.RightMovesWrongOrder" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Cave.RightMovesWrongOrder
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Cave
[ RUN      ] Cave.RightMovesWrongOrder
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/Branching/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/Branching/output.txt
[       OK ] Cave.RightMovesWrongOrder (610 ms)
[----------] 1 test from Cave (610 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (610 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.61 sec
----------------------------------------------------------
Test Passed.
"Cave.RightMovesWrongOrder" end time: Nov 27 11:00 PST
"Cave.RightMovesWrongOrder" time elapsed: 00:00:00
----------------------------------------------------------

11/61 Testing: CaveStress.TenThousandMoves
11/61 Test: CaveStress.TenThousandMoves
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=CaveStress.TenThousandMoves"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"CaveStress.TenThousandMoves" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CaveStress.TenThousandMoves
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CaveStress
[ RUN      ] CaveStress.TenThousandMoves
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/TenThousandMoves/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/TenThousandMoves/output.txt
[       OK ] CaveStress.TenThousandMoves (626 ms)
[----------] 1 test from CaveStress (626 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (626 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.63 sec
----------------------------------------------------------
Test Passed.
"CaveStress.TenThousandMoves" end time: Nov 27 11:00 PST
"CaveStress.TenThousandMoves" time elapsed: 00:00:00
----------------------------------------------------------

12/61 Testing: CaveStress.RandomMovements
12/61 Test: CaveStress.RandomMovements
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=CaveStress.RandomMovements"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"CaveStress.RandomMovements" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CaveStress.RandomMovements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CaveStress
[ RUN      ] CaveStress.RandomMovements
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomMovements/output.txt
[       OK ] CaveStress.RandomMovements (129 ms)
[----------] 1 test from CaveStress (129 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (129 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Passed.
"CaveStress.RandomMovements" end time: Nov 27 11:00 PST
"CaveStress.RandomMovements" time elapsed: 00:00:00
----------------------------------------------------------

13/61 Testing: CaveStress.RandomCorrectPath
13/61 Test: CaveStress.RandomCorrectPath
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/cave_test" "--gtest_filter=CaveStress.RandomCorrectPath"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests
"CaveStress.RandomCorrectPath" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = CaveStress.RandomCorrectPath
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from CaveStress
[ RUN      ] CaveStress.RandomCorrectPath
ewwsesswnswnwwwnwwessssenwesessssewnsewsenwennswnwesenssweswnewnsewnnnnwnweswnnnnweeseeesensennwneew
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wsweswwwsssennneweweeeeewswsewnwsswnwsswwnnsnwwssewnneesnsseennesennesewnenewwwwwewewssswnnneeenwene
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wewnswnsswsnssnewsswnsnwewwsnnessnnwwssenwsneesseewwnnwwsneswnneessnnwssneewesnsennewsnnsnennsensewe
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
newwneewnssesnwswnwnnssnswswwwwesnesnwsennnswnenwnseswsenssswnesnwsnweeeenensnnssesenesnwnnsewwseews
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sewsnwsswwsnnnwnenwnswwweeesnwwnnneswsnewswsnnenwweeswssnenewsnenwssseesnwwweeenseswsesssneennesnewn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nneeesswenwsnssnwswsenesnssenwenwewwwnnswnwseewwweweeewwnesensseeewesweswnnsnwswnenesnnsneswennwwwss
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wssnewenewnsewsweesnssnsensewnnswwseewnweesnwnensnsnswsesnwwesewwneenssewnswnsnnsnwwenewnsewswewsnne
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nesssnwsseseewwnneewesenssnsnnwnwsnnnseennwwseeesnsnwwwneesswwnsssnesessnsnnswnwewwsseewwnwnnesnnnws
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
enssenwnwswesnesnewseswewwnesswesneewswwsnwnnwsenweswnessesneenewwsnwennwseewenwnewsnwsnweneseswnnsw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
enwnnwwswwwwewwwesenwensnennwwnwenwewewwenssnenennsswswsnnsweewewesweseesswsnsweswnweeeweeeeneessesw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nwessewnewnenennnnneeseswwwssnneeeswnweenenwnsweeewwwenseswswwesenwwwssnneeenwnwwssssswswsewsewnnwes
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
snwsseswwwnsewsnnwssswssnsensnwnewnwweewwweesennnewssswnwweeewweesewsesnswnsnnennnessnewnseeenwnnesn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
swneesnswwnsneewnsseenswnnwswwssnenwewwsewwnwweenweswweeseewneeweswsnneenessenswwnnsewwsnseensnwwsen
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nseewwwnwenwwswsnsnssweswnnwnwesennnnesnsennwssnesnwsnnesswnsnwsssswnwesessenwennsnsneneesweseeewwns
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
eweennewenweeesnnnwnseeennnnnesessessneseenwsewsnwesnewneswwnwsnnwnnwnwssssswwwnsesssnwwweswewsswwew
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nnsnwnsesenwesnnsewwnsswnewenwneswwseweewsneswwnewewseenwsnewwewneenwseswewsennseewnssnweswnwnsesnss
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
enseweeswwnwnsewsnnewesweswwnsssenesseeswnweseewesnwewwnwesenwwnnwswnnnseenwenwewssnewnseseenwwewnsw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nennenewnwewewnseenweewswnnnswewesssswsnsnewweneswenwsweewsnsnennnnwewensssenewweswwnsewewesewswssws
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sessewenenswseseswewnnnnewwnnwnnwnnnsnwewnnnnswnwsnesenssssewesnsssessesseewssssewenwnwnenswswewnnwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
senwnesnennweewwnssnnwswwnnsnwenweweswwswnsnenewwnseewswsnseneenweweswesnsseenessnnseewwesswsnwseswn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wenwwnewwsnnnennewewenswewwennsnwwenweensesenneswnsenwsswnwnswwesweesnssweewenswewewsswsssneewseeswe
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
neennwewwwwsnnnnnewwenssnnennwewnneewweeewswnwsnewewsnesenewwweewwssewesswssnnsweewsssssneeeewesswws
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
ssnnsennnessnswsennwswwewesseenswnsnwswwneenwwsswewenneeswwseenesnsenswwnnweweenesswnensnnwssswnssnn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
eseeeswsssnennnneewswesenwwesenewnwswwswenssnsennsnsswnsnnsweneenesewswnweeswnwenewwsssswsnnnenwwwnw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
enewneweswnessssewsswewsewnneeesseewssseeewnnsnwsnsnesnssewwwnnnewwnnwwwssewnewennewnnnnwsenwewsewsw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
seenesnwsnsswsnsnennesewssnneneenwnnnnesssweeennesnwsswwwennnwsssseswwswssnnewnwsswsnsnennsnesnwswwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
enwwnnswsseswswwwweennwnsessswneensnwnssnwnwwnnwenswesseesesnnsesnswwsennnwnsesswweeeenenwnnensseesw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wnsewwwwnsnnnwwwesnwesenswnwnnssenwesewwseeenewnnnsssewswwwneewnweswnnssesenswnwesnweeesssnseeeewnse
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nswswsnenwssnnnwwsnwnnnswnwsssswswwesewenwnnnwswnsnsenessseswewnweenennnnesensssesneesssnneswsnenens
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
swesnnwnnnwweewenesnewewnseeewswnseeennewesewnesnwesnwsewnwewsswwwnsenewwwnsewewsnwswewweesssessnwen
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nseswenseewenwnwesnswwnnesnsnnswnnnewnneenesnwswewewenesnwswwssewsssenssnsnwsseensnweseswewwnswenwns
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sessewseesnssnwwwswwsensenesnwweenssesenwesneennswensswwsnweswnwnnswweesnwswnswneeneeesnnsnwwnewnnwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
snnseswssewnwewssnnewnnsweessnnsssswewswesennssewsnewnnsswnwenewennnnssnnwwenssewssnnewesewnnenwnssn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nnsseeennnsnwneeenewessnwnnwseeseewsewssnwnwnsewssnnewnsesesnnewnewwnwwnessesnnwewswwwsesnssswwwnnss
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sesenwswwweswewnnnnwnssesewswnwesneeswensssnseeswsnenwwnsnnnswenwwsnwesenewnwnnsessssewenweeeneswnwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wnsewnswnswsswswweeneswnnswwwneenwswwnswewsnwwseesnwwneesnewenseeneswwseeenssenwswweenennensensewnse
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sseneneeneewsseswwweeennnwnneswsewnswnswnsensewsnwesnewnswnsensensewnenwssessswwweeenwnnewwswwswswnn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wswennesnsnwewssewsnnsnsssswwnnnsswewswwwwwwesenwsneswnweeeeeenewennssseennnnsnssnewnnewesnsnwsswene
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nswnsesesnswswnnswwwweswnwsnesnssnneewenswwsnsnssewnnsnsneenswewwssnnsnwsnesenweeeenssenensnwnwnsens
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
esenessensnsnsesenwwseswnsswsswwnenseneewssnwnwnssnnsesesnnewwswnswseennennsenwneeswnwnsnsnswnnwswnw
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
newnseseseseseeewewwesewswnnessnssesensenwnnwnneewewwssesseswnswnwnnsnnwssenewnweewewwwnwnwnwnwnsews
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sssneensnsnwswseewnenneweweswswweewsenwnssnweeewsnsnewwwesnnseswnewweenenwewewsswsewwnenesnsnswwsnnn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nsweennnsnewssnwessnneswsswnsensnseensssnwswweweesnwweweenesnnnswwnsnswnsennenwssnnwesnnewsnssswwens
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
ewnweeesensnwwwnwsswnnseswweeweenwwenensesnsewnnesnwssewnsnwnswsweeswwewweenwnssenneseeesnswnwwwesew
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
seewswenenewnnwwwwseswnwenewsennnsneennweewnwnnewewewssesewwesswwsnssswnewswesenwneeeessewswswenewwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
wweewsweswwnnseeswnwwnenswsewwsssenenswenessnwwesnsnweesnnwswenswswnnneewnenswseesenwwnsseenwenewwee
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
weswesseesweeennewwswessnwnwseeeeneewwnwewnnenswswenenswsseweseewwswwwwnesesnnweneewsswwwenwwnnwenwe
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
sessnewwwwswwwsnewnnsennwnsewseeewswsweswesewenensnswswewnwenwenenewwwnewnsesswnssewsneeeneeeewsnnwn
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nwsenesswwewsweeeweweswswsennwwwewweseewnsnnennwewewesswssnsewwnweeweeesswnenenwewewwweneweennwswnes
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
nwnwewwsnwnseeswneennsseneweewennnsseensswwwneenwsneswwseeennswwnnssswewwewswnnsswwsenwwnsesneeweses
This test is executing your program with the following command line: 
/home/cs104/cs104/hw-nyilkhan/hw5/cave
Your program's STDIN was piped from: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/input.txt
Your program's STDOUT was written to: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/cave_tests/testFiles/RandomCorrectPath/output.txt
[       OK ] CaveStress.RandomCorrectPath (121 ms)
[----------] 1 test from CaveStress (121 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (121 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.12 sec
----------------------------------------------------------
Test Passed.
"CaveStress.RandomCorrectPath" end time: Nov 27 11:00 PST
"CaveStress.RandomCorrectPath" time elapsed: 00:00:00
----------------------------------------------------------

14/61 Testing: FunctorSimple.Numbers
14/61 Test: FunctorSimple.Numbers
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.Numbers"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.Numbers" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19023== Memcheck, a memory error detector
==19023== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19023== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19023== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.Numbers
==19023== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.Numbers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.Numbers
[       OK ] FunctorSimple.Numbers (9 ms)
[----------] 1 test from FunctorSimple (14 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (40 ms total)
[  PASSED  ] 1 test.
==19023== 
==19023== HEAP SUMMARY:
==19023==     in use at exit: 72,704 bytes in 1 blocks
==19023==   total heap usage: 336 allocs, 335 frees, 127,342 bytes allocated
==19023== 
==19023== LEAK SUMMARY:
==19023==    definitely lost: 0 bytes in 0 blocks
==19023==    indirectly lost: 0 bytes in 0 blocks
==19023==      possibly lost: 0 bytes in 0 blocks
==19023==    still reachable: 0 bytes in 0 blocks
==19023==         suppressed: 72,704 bytes in 1 blocks
==19023== 
==19023== For counts of detected and suppressed errors, rerun with: -v
==19023== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.Numbers" end time: Nov 27 11:00 PST
"FunctorSimple.Numbers" time elapsed: 00:00:00
----------------------------------------------------------

15/61 Testing: FunctorSimple.CapitalLetters
15/61 Test: FunctorSimple.CapitalLetters
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.CapitalLetters"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.CapitalLetters" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19024== Memcheck, a memory error detector
==19024== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19024== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19024== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.CapitalLetters
==19024== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.CapitalLetters
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.CapitalLetters
[       OK ] FunctorSimple.CapitalLetters (9 ms)
[----------] 1 test from FunctorSimple (14 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (40 ms total)
[  PASSED  ] 1 test.
==19024== 
==19024== HEAP SUMMARY:
==19024==     in use at exit: 72,704 bytes in 1 blocks
==19024==   total heap usage: 336 allocs, 335 frees, 127,391 bytes allocated
==19024== 
==19024== LEAK SUMMARY:
==19024==    definitely lost: 0 bytes in 0 blocks
==19024==    indirectly lost: 0 bytes in 0 blocks
==19024==      possibly lost: 0 bytes in 0 blocks
==19024==    still reachable: 0 bytes in 0 blocks
==19024==         suppressed: 72,704 bytes in 1 blocks
==19024== 
==19024== For counts of detected and suppressed errors, rerun with: -v
==19024== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.CapitalLetters" end time: Nov 27 11:00 PST
"FunctorSimple.CapitalLetters" time elapsed: 00:00:00
----------------------------------------------------------

16/61 Testing: FunctorSimple.Word1
16/61 Test: FunctorSimple.Word1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.Word1"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.Word1" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19025== Memcheck, a memory error detector
==19025== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19025== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19025== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.Word1
==19025== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.Word1
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.Word1
[       OK ] FunctorSimple.Word1 (9 ms)
[----------] 1 test from FunctorSimple (15 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (41 ms total)
[  PASSED  ] 1 test.
==19025== 
==19025== HEAP SUMMARY:
==19025==     in use at exit: 72,704 bytes in 1 blocks
==19025==   total heap usage: 336 allocs, 335 frees, 127,328 bytes allocated
==19025== 
==19025== LEAK SUMMARY:
==19025==    definitely lost: 0 bytes in 0 blocks
==19025==    indirectly lost: 0 bytes in 0 blocks
==19025==      possibly lost: 0 bytes in 0 blocks
==19025==    still reachable: 0 bytes in 0 blocks
==19025==         suppressed: 72,704 bytes in 1 blocks
==19025== 
==19025== For counts of detected and suppressed errors, rerun with: -v
==19025== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.Word1" end time: Nov 27 11:00 PST
"FunctorSimple.Word1" time elapsed: 00:00:00
----------------------------------------------------------

17/61 Testing: FunctorSimple.Word2
17/61 Test: FunctorSimple.Word2
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.Word2"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.Word2" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19026== Memcheck, a memory error detector
==19026== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19026== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19026== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.Word2
==19026== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.Word2
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.Word2
[       OK ] FunctorSimple.Word2 (10 ms)
[----------] 1 test from FunctorSimple (15 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (42 ms total)
[  PASSED  ] 1 test.
==19026== 
==19026== HEAP SUMMARY:
==19026==     in use at exit: 72,704 bytes in 1 blocks
==19026==   total heap usage: 336 allocs, 335 frees, 127,328 bytes allocated
==19026== 
==19026== LEAK SUMMARY:
==19026==    definitely lost: 0 bytes in 0 blocks
==19026==    indirectly lost: 0 bytes in 0 blocks
==19026==      possibly lost: 0 bytes in 0 blocks
==19026==    still reachable: 0 bytes in 0 blocks
==19026==         suppressed: 72,704 bytes in 1 blocks
==19026== 
==19026== For counts of detected and suppressed errors, rerun with: -v
==19026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.Word2" end time: Nov 27 11:00 PST
"FunctorSimple.Word2" time elapsed: 00:00:00
----------------------------------------------------------

18/61 Testing: FunctorSimple.RepeatedCharacter
18/61 Test: FunctorSimple.RepeatedCharacter
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.RepeatedCharacter"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.RepeatedCharacter" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19027== Memcheck, a memory error detector
==19027== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19027== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19027== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.RepeatedCharacter
==19027== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.RepeatedCharacter
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.RepeatedCharacter
[       OK ] FunctorSimple.RepeatedCharacter (9 ms)
[----------] 1 test from FunctorSimple (14 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (40 ms total)
[  PASSED  ] 1 test.
==19027== 
==19027== HEAP SUMMARY:
==19027==     in use at exit: 72,704 bytes in 1 blocks
==19027==   total heap usage: 336 allocs, 335 frees, 127,427 bytes allocated
==19027== 
==19027== LEAK SUMMARY:
==19027==    definitely lost: 0 bytes in 0 blocks
==19027==    indirectly lost: 0 bytes in 0 blocks
==19027==      possibly lost: 0 bytes in 0 blocks
==19027==    still reachable: 0 bytes in 0 blocks
==19027==         suppressed: 72,704 bytes in 1 blocks
==19027== 
==19027== For counts of detected and suppressed errors, rerun with: -v
==19027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.RepeatedCharacter" end time: Nov 27 11:00 PST
"FunctorSimple.RepeatedCharacter" time elapsed: 00:00:00
----------------------------------------------------------

19/61 Testing: FunctorSimple.LongWord
19/61 Test: FunctorSimple.LongWord
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.LongWord"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.LongWord" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19028== Memcheck, a memory error detector
==19028== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19028== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19028== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.LongWord
==19028== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.LongWord
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.LongWord
[       OK ] FunctorSimple.LongWord (10 ms)
[----------] 1 test from FunctorSimple (15 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (43 ms total)
[  PASSED  ] 1 test.
==19028== 
==19028== HEAP SUMMARY:
==19028==     in use at exit: 72,704 bytes in 1 blocks
==19028==   total heap usage: 338 allocs, 337 frees, 127,419 bytes allocated
==19028== 
==19028== LEAK SUMMARY:
==19028==    definitely lost: 0 bytes in 0 blocks
==19028==    indirectly lost: 0 bytes in 0 blocks
==19028==      possibly lost: 0 bytes in 0 blocks
==19028==    still reachable: 0 bytes in 0 blocks
==19028==         suppressed: 72,704 bytes in 1 blocks
==19028== 
==19028== For counts of detected and suppressed errors, rerun with: -v
==19028== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.LongWord" end time: Nov 27 11:00 PST
"FunctorSimple.LongWord" time elapsed: 00:00:00
----------------------------------------------------------

20/61 Testing: FunctorSimple.ExactValue
20/61 Test: FunctorSimple.ExactValue
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorSimple.ExactValue"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorSimple.ExactValue" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19029== Memcheck, a memory error detector
==19029== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19029== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19029== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorSimple.ExactValue
==19029== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorSimple.ExactValue
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorSimple
[ RUN      ] FunctorSimple.ExactValue
[       OK ] FunctorSimple.ExactValue (11 ms)
[----------] 1 test from FunctorSimple (16 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (42 ms total)
[  PASSED  ] 1 test.
==19029== 
==19029== HEAP SUMMARY:
==19029==     in use at exit: 72,704 bytes in 1 blocks
==19029==   total heap usage: 336 allocs, 335 frees, 127,363 bytes allocated
==19029== 
==19029== LEAK SUMMARY:
==19029==    definitely lost: 0 bytes in 0 blocks
==19029==    indirectly lost: 0 bytes in 0 blocks
==19029==      possibly lost: 0 bytes in 0 blocks
==19029==    still reachable: 0 bytes in 0 blocks
==19029==         suppressed: 72,704 bytes in 1 blocks
==19029== 
==19029== For counts of detected and suppressed errors, rerun with: -v
==19029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorSimple.ExactValue" end time: Nov 27 11:00 PST
"FunctorSimple.ExactValue" time elapsed: 00:00:00
----------------------------------------------------------

21/61 Testing: FunctorTiebreaker.SimpleLexicographic
21/61 Test: FunctorTiebreaker.SimpleLexicographic
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorTiebreaker.SimpleLexicographic"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorTiebreaker.SimpleLexicographic" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19030== Memcheck, a memory error detector
==19030== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19030== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19030== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorTiebreaker.SimpleLexicographic
==19030== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorTiebreaker.SimpleLexicographic
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorTiebreaker
[ RUN      ] FunctorTiebreaker.SimpleLexicographic
[       OK ] FunctorTiebreaker.SimpleLexicographic (12 ms)
[----------] 1 test from FunctorTiebreaker (17 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (43 ms total)
[  PASSED  ] 1 test.
==19030== 
==19030== HEAP SUMMARY:
==19030==     in use at exit: 72,704 bytes in 1 blocks
==19030==   total heap usage: 336 allocs, 335 frees, 127,559 bytes allocated
==19030== 
==19030== LEAK SUMMARY:
==19030==    definitely lost: 0 bytes in 0 blocks
==19030==    indirectly lost: 0 bytes in 0 blocks
==19030==      possibly lost: 0 bytes in 0 blocks
==19030==    still reachable: 0 bytes in 0 blocks
==19030==         suppressed: 72,704 bytes in 1 blocks
==19030== 
==19030== For counts of detected and suppressed errors, rerun with: -v
==19030== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorTiebreaker.SimpleLexicographic" end time: Nov 27 11:00 PST
"FunctorTiebreaker.SimpleLexicographic" time elapsed: 00:00:00
----------------------------------------------------------

22/61 Testing: FunctorTiebreaker.ComplexLexicographic
22/61 Test: FunctorTiebreaker.ComplexLexicographic
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorTiebreaker.ComplexLexicographic"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorTiebreaker.ComplexLexicographic" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19031== Memcheck, a memory error detector
==19031== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19031== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19031== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorTiebreaker.ComplexLexicographic
==19031== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorTiebreaker.ComplexLexicographic
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorTiebreaker
[ RUN      ] FunctorTiebreaker.ComplexLexicographic
[       OK ] FunctorTiebreaker.ComplexLexicographic (11 ms)
[----------] 1 test from FunctorTiebreaker (16 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (42 ms total)
[  PASSED  ] 1 test.
==19031== 
==19031== HEAP SUMMARY:
==19031==     in use at exit: 72,704 bytes in 1 blocks
==19031==   total heap usage: 336 allocs, 335 frees, 127,581 bytes allocated
==19031== 
==19031== LEAK SUMMARY:
==19031==    definitely lost: 0 bytes in 0 blocks
==19031==    indirectly lost: 0 bytes in 0 blocks
==19031==      possibly lost: 0 bytes in 0 blocks
==19031==    still reachable: 0 bytes in 0 blocks
==19031==         suppressed: 72,704 bytes in 1 blocks
==19031== 
==19031== For counts of detected and suppressed errors, rerun with: -v
==19031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorTiebreaker.ComplexLexicographic" end time: Nov 27 11:00 PST
"FunctorTiebreaker.ComplexLexicographic" time elapsed: 00:00:00
----------------------------------------------------------

23/61 Testing: FunctorTiebreaker.NotLexicographic
23/61 Test: FunctorTiebreaker.NotLexicographic
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorTiebreaker.NotLexicographic"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorTiebreaker.NotLexicographic" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19032== Memcheck, a memory error detector
==19032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19032== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19032== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorTiebreaker.NotLexicographic
==19032== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorTiebreaker.NotLexicographic
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorTiebreaker
[ RUN      ] FunctorTiebreaker.NotLexicographic
[       OK ] FunctorTiebreaker.NotLexicographic (10 ms)
[----------] 1 test from FunctorTiebreaker (16 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (43 ms total)
[  PASSED  ] 1 test.
==19032== 
==19032== HEAP SUMMARY:
==19032==     in use at exit: 72,704 bytes in 1 blocks
==19032==   total heap usage: 336 allocs, 335 frees, 127,493 bytes allocated
==19032== 
==19032== LEAK SUMMARY:
==19032==    definitely lost: 0 bytes in 0 blocks
==19032==    indirectly lost: 0 bytes in 0 blocks
==19032==      possibly lost: 0 bytes in 0 blocks
==19032==    still reachable: 0 bytes in 0 blocks
==19032==         suppressed: 72,704 bytes in 1 blocks
==19032== 
==19032== For counts of detected and suppressed errors, rerun with: -v
==19032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.68 sec
----------------------------------------------------------
Test Passed.
"FunctorTiebreaker.NotLexicographic" end time: Nov 27 11:00 PST
"FunctorTiebreaker.NotLexicographic" time elapsed: 00:00:00
----------------------------------------------------------

24/61 Testing: FunctorTiebreaker.Equal
24/61 Test: FunctorTiebreaker.Equal
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorTiebreaker.Equal"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorTiebreaker.Equal" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19033== Memcheck, a memory error detector
==19033== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19033== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19033== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorTiebreaker.Equal
==19033== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorTiebreaker.Equal
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorTiebreaker
[ RUN      ] FunctorTiebreaker.Equal
[       OK ] FunctorTiebreaker.Equal (12 ms)
[----------] 1 test from FunctorTiebreaker (17 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (43 ms total)
[  PASSED  ] 1 test.
==19033== 
==19033== HEAP SUMMARY:
==19033==     in use at exit: 72,704 bytes in 1 blocks
==19033==   total heap usage: 336 allocs, 335 frees, 127,356 bytes allocated
==19033== 
==19033== LEAK SUMMARY:
==19033==    definitely lost: 0 bytes in 0 blocks
==19033==    indirectly lost: 0 bytes in 0 blocks
==19033==      possibly lost: 0 bytes in 0 blocks
==19033==    still reachable: 0 bytes in 0 blocks
==19033==         suppressed: 72,704 bytes in 1 blocks
==19033== 
==19033== For counts of detected and suppressed errors, rerun with: -v
==19033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.68 sec
----------------------------------------------------------
Test Passed.
"FunctorTiebreaker.Equal" end time: Nov 27 11:00 PST
"FunctorTiebreaker.Equal" time elapsed: 00:00:00
----------------------------------------------------------

25/61 Testing: FunctorUnknownChars.TreatedAsZero
25/61 Test: FunctorUnknownChars.TreatedAsZero
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorUnknownChars.TreatedAsZero"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorUnknownChars.TreatedAsZero" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19034== Memcheck, a memory error detector
==19034== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19034== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19034== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorUnknownChars.TreatedAsZero
==19034== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorUnknownChars.TreatedAsZero
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorUnknownChars
[ RUN      ] FunctorUnknownChars.TreatedAsZero
[       OK ] FunctorUnknownChars.TreatedAsZero (11 ms)
[----------] 1 test from FunctorUnknownChars (17 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (42 ms total)
[  PASSED  ] 1 test.
==19034== 
==19034== HEAP SUMMARY:
==19034==     in use at exit: 72,704 bytes in 1 blocks
==19034==   total heap usage: 336 allocs, 335 frees, 127,471 bytes allocated
==19034== 
==19034== LEAK SUMMARY:
==19034==    definitely lost: 0 bytes in 0 blocks
==19034==    indirectly lost: 0 bytes in 0 blocks
==19034==      possibly lost: 0 bytes in 0 blocks
==19034==    still reachable: 0 bytes in 0 blocks
==19034==         suppressed: 72,704 bytes in 1 blocks
==19034== 
==19034== For counts of detected and suppressed errors, rerun with: -v
==19034== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorUnknownChars.TreatedAsZero" end time: Nov 27 11:00 PST
"FunctorUnknownChars.TreatedAsZero" time elapsed: 00:00:00
----------------------------------------------------------

26/61 Testing: FunctorUnknownChars.EmptyString
26/61 Test: FunctorUnknownChars.EmptyString
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test" "--gtest_filter=FunctorUnknownChars.EmptyString"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests
"FunctorUnknownChars.EmptyString" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19035== Memcheck, a memory error detector
==19035== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19035== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19035== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/functor_tests/functor_test --gtest_filter=FunctorUnknownChars.EmptyString
==19035== 
Running main() from gtest_main.cc
Note: Google Test filter = FunctorUnknownChars.EmptyString
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FunctorUnknownChars
[ RUN      ] FunctorUnknownChars.EmptyString
[       OK ] FunctorUnknownChars.EmptyString (13 ms)
[----------] 1 test from FunctorUnknownChars (19 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (53 ms total)
[  PASSED  ] 1 test.
==19035== 
==19035== HEAP SUMMARY:
==19035==     in use at exit: 72,704 bytes in 1 blocks
==19035==   total heap usage: 336 allocs, 335 frees, 127,427 bytes allocated
==19035== 
==19035== LEAK SUMMARY:
==19035==    definitely lost: 0 bytes in 0 blocks
==19035==    indirectly lost: 0 bytes in 0 blocks
==19035==      possibly lost: 0 bytes in 0 blocks
==19035==    still reachable: 0 bytes in 0 blocks
==19035==         suppressed: 72,704 bytes in 1 blocks
==19035== 
==19035== For counts of detected and suppressed errors, rerun with: -v
==19035== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.69 sec
----------------------------------------------------------
Test Passed.
"FunctorUnknownChars.EmptyString" end time: Nov 27 11:00 PST
"FunctorUnknownChars.EmptyString" time elapsed: 00:00:00
----------------------------------------------------------

27/61 Testing: MSortTest.SortEmpty
27/61 Test: MSortTest.SortEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortEmpty"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortEmpty" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19036== Memcheck, a memory error detector
==19036== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19036== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19036== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortEmpty
==19036== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortEmpty
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortEmpty
[       OK ] MSortTest.SortEmpty (19 ms)
[----------] 1 test from MSortTest (25 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (50 ms total)
[  PASSED  ] 1 test.
==19036== 
==19036== HEAP SUMMARY:
==19036==     in use at exit: 72,704 bytes in 1 blocks
==19036==   total heap usage: 314 allocs, 313 frees, 128,975 bytes allocated
==19036== 
==19036== LEAK SUMMARY:
==19036==    definitely lost: 0 bytes in 0 blocks
==19036==    indirectly lost: 0 bytes in 0 blocks
==19036==      possibly lost: 0 bytes in 0 blocks
==19036==    still reachable: 0 bytes in 0 blocks
==19036==         suppressed: 72,704 bytes in 1 blocks
==19036== 
==19036== For counts of detected and suppressed errors, rerun with: -v
==19036== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.75 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortEmpty" end time: Nov 27 11:00 PST
"MSortTest.SortEmpty" time elapsed: 00:00:00
----------------------------------------------------------

28/61 Testing: MSortTest.SortSingleElement
28/61 Test: MSortTest.SortSingleElement
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortSingleElement"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortSingleElement" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19037== Memcheck, a memory error detector
==19037== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19037== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19037== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortSingleElement
==19037== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortSingleElement
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortSingleElement
[       OK ] MSortTest.SortSingleElement (24 ms)
[----------] 1 test from MSortTest (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (55 ms total)
[  PASSED  ] 1 test.
==19037== 
==19037== HEAP SUMMARY:
==19037==     in use at exit: 72,704 bytes in 1 blocks
==19037==   total heap usage: 316 allocs, 315 frees, 129,039 bytes allocated
==19037== 
==19037== LEAK SUMMARY:
==19037==    definitely lost: 0 bytes in 0 blocks
==19037==    indirectly lost: 0 bytes in 0 blocks
==19037==      possibly lost: 0 bytes in 0 blocks
==19037==    still reachable: 0 bytes in 0 blocks
==19037==         suppressed: 72,704 bytes in 1 blocks
==19037== 
==19037== For counts of detected and suppressed errors, rerun with: -v
==19037== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.72 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortSingleElement" end time: Nov 27 11:00 PST
"MSortTest.SortSingleElement" time elapsed: 00:00:00
----------------------------------------------------------

29/61 Testing: MSortTest.SortTwoElements_InOrder
29/61 Test: MSortTest.SortTwoElements_InOrder
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortTwoElements_InOrder"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortTwoElements_InOrder" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19038== Memcheck, a memory error detector
==19038== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19038== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19038== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortTwoElements_InOrder
==19038== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortTwoElements_InOrder
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortTwoElements_InOrder
[       OK ] MSortTest.SortTwoElements_InOrder (42 ms)
[----------] 1 test from MSortTest (48 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (79 ms total)
[  PASSED  ] 1 test.
==19038== 
==19038== HEAP SUMMARY:
==19038==     in use at exit: 72,704 bytes in 1 blocks
==19038==   total heap usage: 323 allocs, 322 frees, 129,230 bytes allocated
==19038== 
==19038== LEAK SUMMARY:
==19038==    definitely lost: 0 bytes in 0 blocks
==19038==    indirectly lost: 0 bytes in 0 blocks
==19038==      possibly lost: 0 bytes in 0 blocks
==19038==    still reachable: 0 bytes in 0 blocks
==19038==         suppressed: 72,704 bytes in 1 blocks
==19038== 
==19038== For counts of detected and suppressed errors, rerun with: -v
==19038== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.74 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortTwoElements_InOrder" end time: Nov 27 11:00 PST
"MSortTest.SortTwoElements_InOrder" time elapsed: 00:00:00
----------------------------------------------------------

30/61 Testing: MSortTest.SortTwoElements_OutOfOrder
30/61 Test: MSortTest.SortTwoElements_OutOfOrder
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortTwoElements_OutOfOrder"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortTwoElements_OutOfOrder" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19039== Memcheck, a memory error detector
==19039== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19039== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19039== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortTwoElements_OutOfOrder
==19039== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortTwoElements_OutOfOrder
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortTwoElements_OutOfOrder
[       OK ] MSortTest.SortTwoElements_OutOfOrder (42 ms)
[----------] 1 test from MSortTest (47 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (72 ms total)
[  PASSED  ] 1 test.
==19039== 
==19039== HEAP SUMMARY:
==19039==     in use at exit: 72,704 bytes in 1 blocks
==19039==   total heap usage: 323 allocs, 322 frees, 129,320 bytes allocated
==19039== 
==19039== LEAK SUMMARY:
==19039==    definitely lost: 0 bytes in 0 blocks
==19039==    indirectly lost: 0 bytes in 0 blocks
==19039==      possibly lost: 0 bytes in 0 blocks
==19039==    still reachable: 0 bytes in 0 blocks
==19039==         suppressed: 72,704 bytes in 1 blocks
==19039== 
==19039== For counts of detected and suppressed errors, rerun with: -v
==19039== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.72 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortTwoElements_OutOfOrder" end time: Nov 27 11:00 PST
"MSortTest.SortTwoElements_OutOfOrder" time elapsed: 00:00:00
----------------------------------------------------------

31/61 Testing: MSortTest.SortThreeElements_10_20_30
31/61 Test: MSortTest.SortThreeElements_10_20_30
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_10_20_30"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_10_20_30" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19040== Memcheck, a memory error detector
==19040== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19040== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19040== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_10_20_30
==19040== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_10_20_30
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_10_20_30
[       OK ] MSortTest.SortThreeElements_10_20_30 (43 ms)
[----------] 1 test from MSortTest (48 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (75 ms total)
[  PASSED  ] 1 test.
==19040== 
==19040== HEAP SUMMARY:
==19040==     in use at exit: 72,704 bytes in 1 blocks
==19040==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19040== 
==19040== LEAK SUMMARY:
==19040==    definitely lost: 0 bytes in 0 blocks
==19040==    indirectly lost: 0 bytes in 0 blocks
==19040==      possibly lost: 0 bytes in 0 blocks
==19040==    still reachable: 0 bytes in 0 blocks
==19040==         suppressed: 72,704 bytes in 1 blocks
==19040== 
==19040== For counts of detected and suppressed errors, rerun with: -v
==19040== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.74 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_10_20_30" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_10_20_30" time elapsed: 00:00:00
----------------------------------------------------------

32/61 Testing: MSortTest.SortThreeElements_10_30_20
32/61 Test: MSortTest.SortThreeElements_10_30_20
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_10_30_20"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_10_30_20" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19043== Memcheck, a memory error detector
==19043== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19043== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19043== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_10_30_20
==19043== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_10_30_20
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_10_30_20
[       OK ] MSortTest.SortThreeElements_10_30_20 (50 ms)
[----------] 1 test from MSortTest (56 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (86 ms total)
[  PASSED  ] 1 test.
==19043== 
==19043== HEAP SUMMARY:
==19043==     in use at exit: 72,704 bytes in 1 blocks
==19043==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19043== 
==19043== LEAK SUMMARY:
==19043==    definitely lost: 0 bytes in 0 blocks
==19043==    indirectly lost: 0 bytes in 0 blocks
==19043==      possibly lost: 0 bytes in 0 blocks
==19043==    still reachable: 0 bytes in 0 blocks
==19043==         suppressed: 72,704 bytes in 1 blocks
==19043== 
==19043== For counts of detected and suppressed errors, rerun with: -v
==19043== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.77 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_10_30_20" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_10_30_20" time elapsed: 00:00:00
----------------------------------------------------------

33/61 Testing: MSortTest.SortThreeElements_20_10_30
33/61 Test: MSortTest.SortThreeElements_20_10_30
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_20_10_30"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_20_10_30" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19044== Memcheck, a memory error detector
==19044== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19044== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19044== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_20_10_30
==19044== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_20_10_30
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_20_10_30
[       OK ] MSortTest.SortThreeElements_20_10_30 (43 ms)
[----------] 1 test from MSortTest (48 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (73 ms total)
[  PASSED  ] 1 test.
==19044== 
==19044== HEAP SUMMARY:
==19044==     in use at exit: 72,704 bytes in 1 blocks
==19044==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19044== 
==19044== LEAK SUMMARY:
==19044==    definitely lost: 0 bytes in 0 blocks
==19044==    indirectly lost: 0 bytes in 0 blocks
==19044==      possibly lost: 0 bytes in 0 blocks
==19044==    still reachable: 0 bytes in 0 blocks
==19044==         suppressed: 72,704 bytes in 1 blocks
==19044== 
==19044== For counts of detected and suppressed errors, rerun with: -v
==19044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.74 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_20_10_30" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_20_10_30" time elapsed: 00:00:00
----------------------------------------------------------

34/61 Testing: MSortTest.SortThreeElements_20_30_10
34/61 Test: MSortTest.SortThreeElements_20_30_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_20_30_10"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_20_30_10" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19045== Memcheck, a memory error detector
==19045== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19045== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19045== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_20_30_10
==19045== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_20_30_10
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_20_30_10
[       OK ] MSortTest.SortThreeElements_20_30_10 (57 ms)
[----------] 1 test from MSortTest (68 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (103 ms total)
[  PASSED  ] 1 test.
==19045== 
==19045== HEAP SUMMARY:
==19045==     in use at exit: 72,704 bytes in 1 blocks
==19045==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19045== 
==19045== LEAK SUMMARY:
==19045==    definitely lost: 0 bytes in 0 blocks
==19045==    indirectly lost: 0 bytes in 0 blocks
==19045==      possibly lost: 0 bytes in 0 blocks
==19045==    still reachable: 0 bytes in 0 blocks
==19045==         suppressed: 72,704 bytes in 1 blocks
==19045== 
==19045== For counts of detected and suppressed errors, rerun with: -v
==19045== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_20_30_10" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_20_30_10" time elapsed: 00:00:00
----------------------------------------------------------

35/61 Testing: MSortTest.SortThreeElements_30_10_20
35/61 Test: MSortTest.SortThreeElements_30_10_20
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_30_10_20"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_30_10_20" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19046== Memcheck, a memory error detector
==19046== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19046== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19046== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_30_10_20
==19046== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_30_10_20
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_30_10_20
[       OK ] MSortTest.SortThreeElements_30_10_20 (51 ms)
[----------] 1 test from MSortTest (62 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (99 ms total)
[  PASSED  ] 1 test.
==19046== 
==19046== HEAP SUMMARY:
==19046==     in use at exit: 72,704 bytes in 1 blocks
==19046==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19046== 
==19046== LEAK SUMMARY:
==19046==    definitely lost: 0 bytes in 0 blocks
==19046==    indirectly lost: 0 bytes in 0 blocks
==19046==      possibly lost: 0 bytes in 0 blocks
==19046==    still reachable: 0 bytes in 0 blocks
==19046==         suppressed: 72,704 bytes in 1 blocks
==19046== 
==19046== For counts of detected and suppressed errors, rerun with: -v
==19046== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.98 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_30_10_20" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_30_10_20" time elapsed: 00:00:00
----------------------------------------------------------

36/61 Testing: MSortTest.SortThreeElements_30_20_10
36/61 Test: MSortTest.SortThreeElements_30_20_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_30_20_10"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_30_20_10" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19047== Memcheck, a memory error detector
==19047== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19047== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19047== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_30_20_10
==19047== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_30_20_10
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_30_20_10
[       OK ] MSortTest.SortThreeElements_30_20_10 (46 ms)
[----------] 1 test from MSortTest (51 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (78 ms total)
[  PASSED  ] 1 test.
==19047== 
==19047== HEAP SUMMARY:
==19047==     in use at exit: 72,704 bytes in 1 blocks
==19047==   total heap usage: 330 allocs, 329 frees, 129,408 bytes allocated
==19047== 
==19047== LEAK SUMMARY:
==19047==    definitely lost: 0 bytes in 0 blocks
==19047==    indirectly lost: 0 bytes in 0 blocks
==19047==      possibly lost: 0 bytes in 0 blocks
==19047==    still reachable: 0 bytes in 0 blocks
==19047==         suppressed: 72,704 bytes in 1 blocks
==19047== 
==19047== For counts of detected and suppressed errors, rerun with: -v
==19047== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.83 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_30_20_10" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_30_20_10" time elapsed: 00:00:00
----------------------------------------------------------

37/61 Testing: MSortTest.SortThreeElements_Greater
37/61 Test: MSortTest.SortThreeElements_Greater
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortThreeElements_Greater"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortThreeElements_Greater" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19048== Memcheck, a memory error detector
==19048== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19048== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19048== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortThreeElements_Greater
==19048== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortThreeElements_Greater
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortThreeElements_Greater
[       OK ] MSortTest.SortThreeElements_Greater (70 ms)
[----------] 1 test from MSortTest (82 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (119 ms total)
[  PASSED  ] 1 test.
==19048== 
==19048== HEAP SUMMARY:
==19048==     in use at exit: 72,704 bytes in 1 blocks
==19048==   total heap usage: 330 allocs, 329 frees, 129,378 bytes allocated
==19048== 
==19048== LEAK SUMMARY:
==19048==    definitely lost: 0 bytes in 0 blocks
==19048==    indirectly lost: 0 bytes in 0 blocks
==19048==      possibly lost: 0 bytes in 0 blocks
==19048==    still reachable: 0 bytes in 0 blocks
==19048==         suppressed: 72,704 bytes in 1 blocks
==19048== 
==19048== For counts of detected and suppressed errors, rerun with: -v
==19048== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.89 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortThreeElements_Greater" end time: Nov 27 11:00 PST
"MSortTest.SortThreeElements_Greater" time elapsed: 00:00:00
----------------------------------------------------------

38/61 Testing: MSortTest.SortStrings
38/61 Test: MSortTest.SortStrings
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortStrings"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortStrings" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19049== Memcheck, a memory error detector
==19049== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19049== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19049== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortStrings
==19049== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortStrings
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortStrings
[       OK ] MSortTest.SortStrings (61 ms)
[----------] 1 test from MSortTest (68 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==19049== 
==19049== HEAP SUMMARY:
==19049==     in use at exit: 72,704 bytes in 1 blocks
==19049==   total heap usage: 343 allocs, 342 frees, 129,901 bytes allocated
==19049== 
==19049== LEAK SUMMARY:
==19049==    definitely lost: 0 bytes in 0 blocks
==19049==    indirectly lost: 0 bytes in 0 blocks
==19049==      possibly lost: 0 bytes in 0 blocks
==19049==    still reachable: 0 bytes in 0 blocks
==19049==         suppressed: 72,704 bytes in 1 blocks
==19049== 
==19049== For counts of detected and suppressed errors, rerun with: -v
==19049== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortStrings" end time: Nov 27 11:00 PST
"MSortTest.SortStrings" time elapsed: 00:00:00
----------------------------------------------------------

39/61 Testing: MSortTest.SortPairs
39/61 Test: MSortTest.SortPairs
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.SortPairs"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.SortPairs" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19050== Memcheck, a memory error detector
==19050== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19050== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19050== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.SortPairs
==19050== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.SortPairs
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.SortPairs
[       OK ] MSortTest.SortPairs (67 ms)
[----------] 1 test from MSortTest (75 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (100 ms total)
[  PASSED  ] 1 test.
==19050== 
==19050== HEAP SUMMARY:
==19050==     in use at exit: 72,704 bytes in 1 blocks
==19050==   total heap usage: 343 allocs, 342 frees, 130,047 bytes allocated
==19050== 
==19050== LEAK SUMMARY:
==19050==    definitely lost: 0 bytes in 0 blocks
==19050==    indirectly lost: 0 bytes in 0 blocks
==19050==      possibly lost: 0 bytes in 0 blocks
==19050==    still reachable: 0 bytes in 0 blocks
==19050==         suppressed: 72,704 bytes in 1 blocks
==19050== 
==19050== For counts of detected and suppressed errors, rerun with: -v
==19050== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.89 sec
----------------------------------------------------------
Test Passed.
"MSortTest.SortPairs" end time: Nov 27 11:00 PST
"MSortTest.SortPairs" time elapsed: 00:00:00
----------------------------------------------------------

40/61 Testing: MSortTest.Split_k_20
40/61 Test: MSortTest.Split_k_20
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Split_k_20"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Split_k_20" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19051== Memcheck, a memory error detector
==19051== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19051== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19051== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Split_k_20
==19051== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Split_k_20
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Split_k_20
[       OK ] MSortTest.Split_k_20 (83 ms)
[----------] 1 test from MSortTest (88 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (117 ms total)
[  PASSED  ] 1 test.
==19051== 
==19051== HEAP SUMMARY:
==19051==     in use at exit: 72,704 bytes in 1 blocks
==19051==   total heap usage: 746 allocs, 745 frees, 144,766 bytes allocated
==19051== 
==19051== LEAK SUMMARY:
==19051==    definitely lost: 0 bytes in 0 blocks
==19051==    indirectly lost: 0 bytes in 0 blocks
==19051==      possibly lost: 0 bytes in 0 blocks
==19051==    still reachable: 0 bytes in 0 blocks
==19051==         suppressed: 72,704 bytes in 1 blocks
==19051== 
==19051== For counts of detected and suppressed errors, rerun with: -v
==19051== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.94 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Split_k_20" end time: Nov 27 11:00 PST
"MSortTest.Split_k_20" time elapsed: 00:00:00
----------------------------------------------------------

41/61 Testing: MSortTest.Split_k_50
41/61 Test: MSortTest.Split_k_50
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Split_k_50"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Split_k_50" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19052== Memcheck, a memory error detector
==19052== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19052== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19052== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Split_k_50
==19052== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Split_k_50
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Split_k_50
[       OK ] MSortTest.Split_k_50 (152 ms)
[----------] 1 test from MSortTest (157 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (196 ms total)
[  PASSED  ] 1 test.
==19052== 
==19052== HEAP SUMMARY:
==19052==     in use at exit: 72,704 bytes in 1 blocks
==19052==   total heap usage: 1,694 allocs, 1,693 frees, 223,130 bytes allocated
==19052== 
==19052== LEAK SUMMARY:
==19052==    definitely lost: 0 bytes in 0 blocks
==19052==    indirectly lost: 0 bytes in 0 blocks
==19052==      possibly lost: 0 bytes in 0 blocks
==19052==    still reachable: 0 bytes in 0 blocks
==19052==         suppressed: 72,704 bytes in 1 blocks
==19052== 
==19052== For counts of detected and suppressed errors, rerun with: -v
==19052== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.96 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Split_k_50" end time: Nov 27 11:00 PST
"MSortTest.Split_k_50" time elapsed: 00:00:00
----------------------------------------------------------

42/61 Testing: MSortTest.Split_k_100
42/61 Test: MSortTest.Split_k_100
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Split_k_100"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Split_k_100" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19053== Memcheck, a memory error detector
==19053== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19053== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19053== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Split_k_100
==19053== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Split_k_100
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Split_k_100
[       OK ] MSortTest.Split_k_100 (508 ms)
[----------] 1 test from MSortTest (515 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (543 ms total)
[  PASSED  ] 1 test.
==19053== 
==19053== HEAP SUMMARY:
==19053==     in use at exit: 72,704 bytes in 1 blocks
==19053==   total heap usage: 3,602 allocs, 3,601 frees, 496,097 bytes allocated
==19053== 
==19053== LEAK SUMMARY:
==19053==    definitely lost: 0 bytes in 0 blocks
==19053==    indirectly lost: 0 bytes in 0 blocks
==19053==      possibly lost: 0 bytes in 0 blocks
==19053==    still reachable: 0 bytes in 0 blocks
==19053==         suppressed: 72,704 bytes in 1 blocks
==19053== 
==19053== For counts of detected and suppressed errors, rerun with: -v
==19053== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.30 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Split_k_100" end time: Nov 27 11:00 PST
"MSortTest.Split_k_100" time elapsed: 00:00:01
----------------------------------------------------------

43/61 Testing: MSortTest.Split_k_200
43/61 Test: MSortTest.Split_k_200
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Split_k_200"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Split_k_200" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19054== Memcheck, a memory error detector
==19054== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19054== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19054== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Split_k_200
==19054== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Split_k_200
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Split_k_200
[       OK ] MSortTest.Split_k_200 (23 ms)
[----------] 1 test from MSortTest (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (60 ms total)
[  PASSED  ] 1 test.
==19054== 
==19054== HEAP SUMMARY:
==19054==     in use at exit: 72,704 bytes in 1 blocks
==19054==   total heap usage: 314 allocs, 313 frees, 128,989 bytes allocated
==19054== 
==19054== LEAK SUMMARY:
==19054==    definitely lost: 0 bytes in 0 blocks
==19054==    indirectly lost: 0 bytes in 0 blocks
==19054==      possibly lost: 0 bytes in 0 blocks
==19054==    still reachable: 0 bytes in 0 blocks
==19054==         suppressed: 72,704 bytes in 1 blocks
==19054== 
==19054== For counts of detected and suppressed errors, rerun with: -v
==19054== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.95 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Split_k_200" end time: Nov 27 11:00 PST
"MSortTest.Split_k_200" time elapsed: 00:00:00
----------------------------------------------------------

44/61 Testing: MSortTest.Stress10Elements_Less
44/61 Test: MSortTest.Stress10Elements_Less
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Stress10Elements_Less"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Stress10Elements_Less" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19055== Memcheck, a memory error detector
==19055== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19055== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19055== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Stress10Elements_Less
==19055== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Stress10Elements_Less
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Stress10Elements_Less
[       OK ] MSortTest.Stress10Elements_Less (59 ms)
[----------] 1 test from MSortTest (66 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (92 ms total)
[  PASSED  ] 1 test.
==19055== 
==19055== HEAP SUMMARY:
==19055==     in use at exit: 72,704 bytes in 1 blocks
==19055==   total heap usage: 370 allocs, 369 frees, 129,774 bytes allocated
==19055== 
==19055== LEAK SUMMARY:
==19055==    definitely lost: 0 bytes in 0 blocks
==19055==    indirectly lost: 0 bytes in 0 blocks
==19055==      possibly lost: 0 bytes in 0 blocks
==19055==    still reachable: 0 bytes in 0 blocks
==19055==         suppressed: 72,704 bytes in 1 blocks
==19055== 
==19055== For counts of detected and suppressed errors, rerun with: -v
==19055== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Stress10Elements_Less" end time: Nov 27 11:00 PST
"MSortTest.Stress10Elements_Less" time elapsed: 00:00:00
----------------------------------------------------------

45/61 Testing: MSortTest.Stress100Elements_Less
45/61 Test: MSortTest.Stress100Elements_Less
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Stress100Elements_Less"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Stress100Elements_Less" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19056== Memcheck, a memory error detector
==19056== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19056== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19056== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Stress100Elements_Less
==19056== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Stress100Elements_Less
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Stress100Elements_Less
[       OK ] MSortTest.Stress100Elements_Less (65 ms)
[----------] 1 test from MSortTest (70 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==19056== 
==19056== HEAP SUMMARY:
==19056==     in use at exit: 72,704 bytes in 1 blocks
==19056==   total heap usage: 910 allocs, 909 frees, 136,644 bytes allocated
==19056== 
==19056== LEAK SUMMARY:
==19056==    definitely lost: 0 bytes in 0 blocks
==19056==    indirectly lost: 0 bytes in 0 blocks
==19056==      possibly lost: 0 bytes in 0 blocks
==19056==    still reachable: 0 bytes in 0 blocks
==19056==         suppressed: 72,704 bytes in 1 blocks
==19056== 
==19056== For counts of detected and suppressed errors, rerun with: -v
==19056== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.76 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Stress100Elements_Less" end time: Nov 27 11:00 PST
"MSortTest.Stress100Elements_Less" time elapsed: 00:00:00
----------------------------------------------------------

46/61 Testing: MSortTest.Stress1000Elements_Less
46/61 Test: MSortTest.Stress1000Elements_Less
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Stress1000Elements_Less"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Stress1000Elements_Less" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19057== Memcheck, a memory error detector
==19057== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19057== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19057== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Stress1000Elements_Less
==19057== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Stress1000Elements_Less
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Stress1000Elements_Less
[       OK ] MSortTest.Stress1000Elements_Less (171 ms)
[----------] 1 test from MSortTest (176 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (202 ms total)
[  PASSED  ] 1 test.
==19057== 
==19057== HEAP SUMMARY:
==19057==     in use at exit: 72,704 bytes in 1 blocks
==19057==   total heap usage: 6,310 allocs, 6,309 frees, 205,074 bytes allocated
==19057== 
==19057== LEAK SUMMARY:
==19057==    definitely lost: 0 bytes in 0 blocks
==19057==    indirectly lost: 0 bytes in 0 blocks
==19057==      possibly lost: 0 bytes in 0 blocks
==19057==    still reachable: 0 bytes in 0 blocks
==19057==         suppressed: 72,704 bytes in 1 blocks
==19057== 
==19057== For counts of detected and suppressed errors, rerun with: -v
==19057== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.86 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Stress1000Elements_Less" end time: Nov 27 11:00 PST
"MSortTest.Stress1000Elements_Less" time elapsed: 00:00:00
----------------------------------------------------------

47/61 Testing: MSortTest.Stress10000Elements_Less
47/61 Test: MSortTest.Stress10000Elements_Less
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test" "--gtest_filter=MSortTest.Stress10000Elements_Less"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MSortTest.Stress10000Elements_Less" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19058== Memcheck, a memory error detector
==19058== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19058== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19058== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_test --gtest_filter=MSortTest.Stress10000Elements_Less
==19058== 
Running main() from gtest_main.cc
Note: Google Test filter = MSortTest.Stress10000Elements_Less
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MSortTest
[ RUN      ] MSortTest.Stress10000Elements_Less
Stack size was 0x800000 bytes, setting it to the max of infinity bytes.
[       OK ] MSortTest.Stress10000Elements_Less (1240 ms)
[----------] 1 test from MSortTest (1245 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1271 ms total)
[  PASSED  ] 1 test.
==19058== 
==19058== HEAP SUMMARY:
==19058==     in use at exit: 72,704 bytes in 1 blocks
==19058==   total heap usage: 60,312 allocs, 60,311 frees, 890,130 bytes allocated
==19058== 
==19058== LEAK SUMMARY:
==19058==    definitely lost: 0 bytes in 0 blocks
==19058==    indirectly lost: 0 bytes in 0 blocks
==19058==      possibly lost: 0 bytes in 0 blocks
==19058==    still reachable: 0 bytes in 0 blocks
==19058==         suppressed: 72,704 bytes in 1 blocks
==19058== 
==19058== For counts of detected and suppressed errors, rerun with: -v
==19058== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.92 sec
----------------------------------------------------------
Test Passed.
"MSortTest.Stress10000Elements_Less" end time: Nov 27 11:00 PST
"MSortTest.Stress10000Elements_Less" time elapsed: 00:00:01
----------------------------------------------------------

48/61 Testing: MergeSortRuntime.KEqual2
48/61 Test: MergeSortRuntime.KEqual2
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_runtime_test" "--gtest_filter=MergeSortRuntime.KEqual2"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MergeSortRuntime.KEqual2" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MergeSortRuntime.KEqual2
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MergeSortRuntime
[ RUN      ] MergeSortRuntime.KEqual2
>> Evaluating runtime of mergeSort() with k=2
Testing with 2^1 (2) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^2 (4) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^3 (8) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^4 (16) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^5 (32) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^6 (64) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^7 (128) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^8 (256) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^9 (512) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^10 (1024) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^11 (2048) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^12 (4096) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^13 (8192) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^14 (16384) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing if time complexity could be linear...
Correlation factor (2.3980) is >= threshold (1.4000)
>> Time complexity of mergeSort() with k=2 is likely linear
Testing if time complexity could be constant...
Correlation factor (-2.7651) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Correlation factor (0.3080) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (0.2692) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (1.0360) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.6068) is < threshold (1.4000)
[       OK ] MergeSortRuntime.KEqual2 (3286 ms)
[----------] 1 test from MergeSortRuntime (3286 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3286 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   3.29 sec
----------------------------------------------------------
Test Passed.
"MergeSortRuntime.KEqual2" end time: Nov 27 11:00 PST
"MergeSortRuntime.KEqual2" time elapsed: 00:00:03
----------------------------------------------------------

49/61 Testing: MergeSortRuntime.KEqualN
49/61 Test: MergeSortRuntime.KEqualN
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests/msort_runtime_test" "--gtest_filter=MergeSortRuntime.KEqualN"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/msort_tests
"MergeSortRuntime.KEqualN" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = MergeSortRuntime.KEqualN
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MergeSortRuntime
[ RUN      ] MergeSortRuntime.KEqualN
>> Evaluating runtime of mergeSort() with k=n
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Removed outlier data point (2, 5449)
Removed outlier data point (2, 3240)
Removed outlier data point (2, 3185)
Removed outlier data point (4, 4191)
Removed outlier data point (4, 4076)
Removed outlier data point (4, 3968)
Removed outlier data point (8, 7889)
Removed outlier data point (8, 6820)
Removed outlier data point (8, 6558)
Removed outlier data point (16, 12555)
Removed outlier data point (16, 12022)
Removed outlier data point (16, 11985)
Removed outlier data point (32, 27473)
Removed outlier data point (32, 25682)
Removed outlier data point (32, 25240)
Removed outlier data point (64, 151772)
Removed outlier data point (64, 149493)
Removed outlier data point (64, 124868)
Removed outlier data point (128, 709820)
Removed outlier data point (128, 470837)
Removed outlier data point (128, 454738)
Removed outlier data point (256, 1124451)
Removed outlier data point (256, 1056670)
Removed outlier data point (256, 1022572)
Removed outlier data point (512, 5004080)
Removed outlier data point (512, 3926697)
Removed outlier data point (512, 3467903)
Removed outlier data point (1024, 14191295)
Removed outlier data point (1024, 14065927)
Removed outlier data point (1024, 13496585)
Removed outlier data point (2048, 73639793)
Removed outlier data point (2048, 65773500)
Removed outlier data point (2048, 60123966)
Removed outlier data point (4096, 354969370)
Removed outlier data point (4096, 348719705)
Removed outlier data point (4096, 332226917)
Runtime data: 
# of Elements, Runtime (ns)
2, 2723
2, 3023
2, 3003
2, 2908
2, 2810
2, 2889
2, 2782
2, 2814
2, 2780
2, 2702
2, 3044
2, 2757
2, 2756
2, 2737
2, 2795
2, 2784
2, 2716
2, 2729
2, 2143
2, 2825
2, 2150
2, 2734
2, 2685
2, 2667
2, 2641
2, 2708
2, 2737
4, 3946
4, 3957
4, 3760
4, 3784
4, 3786
4, 3732
4, 3835
4, 3817
4, 3749
4, 3680
4, 3746
4, 3800
4, 3657
4, 3827
4, 3691
4, 3739
4, 3654
4, 3868
4, 3735
4, 3835
4, 3734
4, 3634
4, 3818
4, 3676
4, 3760
4, 3671
4, 3669
8, 6498
8, 5989
8, 5822
8, 5961
8, 6430
8, 5875
8, 5836
8, 5792
8, 5795
8, 5711
8, 5757
8, 6019
8, 5261
8, 6129
8, 5744
8, 5806
8, 5236
8, 5931
8, 5311
8, 5987
8, 5690
8, 5727
8, 5801
8, 5992
8, 5793
8, 5840
8, 5856
16, 11329
16, 11131
16, 10730
16, 10864
16, 10619
16, 10933
16, 10799
16, 10987
16, 10781
16, 10787
16, 10295
16, 10609
16, 10797
16, 10869
16, 10656
16, 10775
16, 10920
16, 10734
16, 10867
16, 10238
16, 10971
16, 10696
16, 11209
16, 10991
16, 10916
16, 10972
16, 10764
32, 24258
32, 24971
32, 23561
32, 24763
32, 24156
32, 24055
32, 25168
32, 23318
32, 24221
32, 24555
32, 23949
32, 24247
32, 24876
32, 24401
32, 23726
32, 24198
32, 23561
32, 24669
32, 23635
32, 24183
32, 24173
32, 24488
32, 24173
32, 24162
32, 24182
32, 24757
32, 24328
64, 67765
64, 67458
64, 71020
64, 66639
64, 66163
64, 66862
64, 67962
64, 69431
64, 93936
64, 66914
64, 101945
64, 101058
64, 68589
64, 66144
64, 66438
64, 67487
64, 67571
64, 69876
64, 66069
64, 96554
64, 67589
64, 69714
64, 68177
64, 69859
64, 68012
64, 75021
64, 66659
128, 414176
128, 450513
128, 316137
128, 317274
128, 316925
128, 431311
128, 289491
128, 233519
128, 232378
128, 320276
128, 243359
128, 230808
128, 242275
128, 234945
128, 233465
128, 242322
128, 351476
128, 230499
128, 342613
128, 220977
128, 220636
128, 222323
128, 218872
128, 221457
128, 219119
128, 217887
128, 219202
256, 837496
256, 861274
256, 1000059
256, 1010358
256, 997317
256, 909058
256, 833076
256, 824051
256, 851173
256, 866861
256, 816742
256, 819543
256, 806610
256, 858359
256, 810005
256, 797648
256, 825622
256, 814551
256, 844011
256, 816270
256, 823933
256, 819164
256, 953514
256, 847562
256, 824118
256, 817001
256, 820571
512, 3336260
512, 3228674
512, 3352518
512, 3277633
512, 3324856
512, 3345204
512, 3438768
512, 3240160
512, 3430478
512, 3261964
512, 3223846
512, 3219276
512, 3229275
512, 3378126
512, 3396814
512, 3215754
512, 3248111
512, 3238975
512, 3180963
512, 3205733
512, 3251676
512, 3212509
512, 3193949
512, 3252646
512, 3227099
512, 3294360
512, 3345237
1024, 13126954
1024, 12944067
1024, 13101849
1024, 13006209
1024, 13254395
1024, 13054611
1024, 13007949
1024, 13183552
1024, 13462394
1024, 13446659
1024, 13179108
1024, 13493124
1024, 13219575
1024, 13043026
1024, 13248053
1024, 13048892
1024, 13298694
1024, 13137714
1024, 13122425
1024, 13012550
1024, 13038910
1024, 13369125
1024, 13037163
1024, 13268499
1024, 13118104
1024, 13016992
1024, 12934554
2048, 52902400
2048, 52720892
2048, 52633918
2048, 52837406
2048, 53073347
2048, 52624992
2048, 52666913
2048, 53284061
2048, 53499798
2048, 52899421
2048, 53358170
2048, 53095912
2048, 52741691
2048, 53305962
2048, 52712176
2048, 54036496
2048, 52786216
2048, 52679384
2048, 52931090
2048, 52810084
2048, 52901088
2048, 58245249
2048, 53124795
2048, 57185072
2048, 58767309
2048, 53729551
2048, 52536336
4096, 255624029
4096, 230105823
4096, 214020515
4096, 215913090
4096, 213001299
4096, 212793863
4096, 213169227
4096, 212361862
4096, 212431293
4096, 213336483
4096, 213237917
4096, 213238668
4096, 212739651
4096, 214205246
4096, 214161902
4096, 212460707
4096, 213235704
4096, 212309253
4096, 214044436
4096, 212912726
4096, 212888426
4096, 217749356
4096, 266334261
4096, 278709498
4096, 240500613
4096, 277604439
4096, 272631397
----------------------------------------------
Testing if time complexity could be linear...
Average error squared: 3.17e+14
Average y squared: 4.54e+15
Regression formula: t = 50454.5993n + 0.0000
Correlation factor (1.1552) is < threshold (1.4000)
Testing if time complexity could be constant...
Average error squared: 9.44e+21
Average y squared: 2.61e+18
Regression formula: t = 197170957.9380n + 0.0000
Correlation factor (-3.5580) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Average error squared: 2.40e+15
Average y squared: 4.54e+15
Regression formula: t = 16129389.2451n + 0.0000
Correlation factor (0.2773) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Average error squared: 1.63e+08
Average y squared: 3.31e+08
Regression formula: t = 4834.6574n + 0.0000
Correlation factor (0.3078) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Average error squared: 3.34e+04
Average y squared: 2.47e+07
Regression formula: t = 3.6345n + 0.0000
Correlation factor (2.8695) is >= threshold (1.4000)
>> Time complexity of mergeSort() with k=n is likely quadratic
Testing if time complexity could be cubic...
Average error squared: 2.17e+03
Average y squared: 5.05e+04
Regression formula: t = 0.1477n + 0.0000
Correlation factor (1.3672) is < threshold (1.4000)
[       OK ] MergeSortRuntime.KEqualN (9359 ms)
[----------] 1 test from MergeSortRuntime (9359 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (9359 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   9.36 sec
----------------------------------------------------------
Test Passed.
"MergeSortRuntime.KEqualN" end time: Nov 27 11:00 PST
"MergeSortRuntime.KEqualN" time elapsed: 00:00:09
----------------------------------------------------------

50/61 Testing: Fatalist.OneStudent
50/61 Test: Fatalist.OneStudent
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.OneStudent"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.OneStudent" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19061== Memcheck, a memory error detector
==19061== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19061== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19061== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.OneStudent
==19061== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.OneStudent
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.OneStudent
[       OK ] Fatalist.OneStudent (31 ms)
[----------] 1 test from Fatalist (38 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (78 ms total)
[  PASSED  ] 1 test.
==19061== 
==19061== HEAP SUMMARY:
==19061==     in use at exit: 72,704 bytes in 1 blocks
==19061==   total heap usage: 257 allocs, 256 frees, 125,227 bytes allocated
==19061== 
==19061== LEAK SUMMARY:
==19061==    definitely lost: 0 bytes in 0 blocks
==19061==    indirectly lost: 0 bytes in 0 blocks
==19061==      possibly lost: 0 bytes in 0 blocks
==19061==    still reachable: 0 bytes in 0 blocks
==19061==         suppressed: 72,704 bytes in 1 blocks
==19061== 
==19061== For counts of detected and suppressed errors, rerun with: -v
==19061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.91 sec
----------------------------------------------------------
Test Passed.
"Fatalist.OneStudent" end time: Nov 27 11:00 PST
"Fatalist.OneStudent" time elapsed: 00:00:00
----------------------------------------------------------

51/61 Testing: Fatalist.AllEqual
51/61 Test: Fatalist.AllEqual
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.AllEqual"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.AllEqual" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19062== Memcheck, a memory error detector
==19062== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19062== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19062== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.AllEqual
==19062== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.AllEqual
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.AllEqual
[       OK ] Fatalist.AllEqual (22 ms)
[----------] 1 test from Fatalist (27 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (55 ms total)
[  PASSED  ] 1 test.
==19062== 
==19062== HEAP SUMMARY:
==19062==     in use at exit: 72,704 bytes in 1 blocks
==19062==   total heap usage: 256 allocs, 255 frees, 125,221 bytes allocated
==19062== 
==19062== LEAK SUMMARY:
==19062==    definitely lost: 0 bytes in 0 blocks
==19062==    indirectly lost: 0 bytes in 0 blocks
==19062==      possibly lost: 0 bytes in 0 blocks
==19062==    still reachable: 0 bytes in 0 blocks
==19062==         suppressed: 72,704 bytes in 1 blocks
==19062== 
==19062== For counts of detected and suppressed errors, rerun with: -v
==19062== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.81 sec
----------------------------------------------------------
Test Passed.
"Fatalist.AllEqual" end time: Nov 27 11:00 PST
"Fatalist.AllEqual" time elapsed: 00:00:00
----------------------------------------------------------

52/61 Testing: Fatalist.Higher170Grade
52/61 Test: Fatalist.Higher170Grade
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.Higher170Grade"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.Higher170Grade" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19063== Memcheck, a memory error detector
==19063== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19063== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19063== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.Higher170Grade
==19063== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.Higher170Grade
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.Higher170Grade
[       OK ] Fatalist.Higher170Grade (38 ms)
[----------] 1 test from Fatalist (44 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (74 ms total)
[  PASSED  ] 1 test.
==19063== 
==19063== HEAP SUMMARY:
==19063==     in use at exit: 72,704 bytes in 1 blocks
==19063==   total heap usage: 256 allocs, 255 frees, 125,255 bytes allocated
==19063== 
==19063== LEAK SUMMARY:
==19063==    definitely lost: 0 bytes in 0 blocks
==19063==    indirectly lost: 0 bytes in 0 blocks
==19063==      possibly lost: 0 bytes in 0 blocks
==19063==    still reachable: 0 bytes in 0 blocks
==19063==         suppressed: 72,704 bytes in 1 blocks
==19063== 
==19063== For counts of detected and suppressed errors, rerun with: -v
==19063== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.79 sec
----------------------------------------------------------
Test Passed.
"Fatalist.Higher170Grade" end time: Nov 27 11:00 PST
"Fatalist.Higher170Grade" time elapsed: 00:00:00
----------------------------------------------------------

53/61 Testing: Fatalist.Higher104Grade
53/61 Test: Fatalist.Higher104Grade
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.Higher104Grade"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.Higher104Grade" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19064== Memcheck, a memory error detector
==19064== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19064== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19064== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.Higher104Grade
==19064== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.Higher104Grade
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.Higher104Grade
[       OK ] Fatalist.Higher104Grade (37 ms)
[----------] 1 test from Fatalist (43 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==19064== 
==19064== HEAP SUMMARY:
==19064==     in use at exit: 72,704 bytes in 1 blocks
==19064==   total heap usage: 256 allocs, 255 frees, 125,255 bytes allocated
==19064== 
==19064== LEAK SUMMARY:
==19064==    definitely lost: 0 bytes in 0 blocks
==19064==    indirectly lost: 0 bytes in 0 blocks
==19064==      possibly lost: 0 bytes in 0 blocks
==19064==    still reachable: 0 bytes in 0 blocks
==19064==         suppressed: 72,704 bytes in 1 blocks
==19064== 
==19064== For counts of detected and suppressed errors, rerun with: -v
==19064== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.93 sec
----------------------------------------------------------
Test Passed.
"Fatalist.Higher104Grade" end time: Nov 27 11:00 PST
"Fatalist.Higher104Grade" time elapsed: 00:00:00
----------------------------------------------------------

54/61 Testing: Fatalist.BothGradesHigher
54/61 Test: Fatalist.BothGradesHigher
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.BothGradesHigher"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.BothGradesHigher" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19065== Memcheck, a memory error detector
==19065== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19065== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19065== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.BothGradesHigher
==19065== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.BothGradesHigher
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.BothGradesHigher
[       OK ] Fatalist.BothGradesHigher (24 ms)
[----------] 1 test from Fatalist (30 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (55 ms total)
[  PASSED  ] 1 test.
==19065== 
==19065== HEAP SUMMARY:
==19065==     in use at exit: 72,704 bytes in 1 blocks
==19065==   total heap usage: 256 allocs, 255 frees, 125,269 bytes allocated
==19065== 
==19065== LEAK SUMMARY:
==19065==    definitely lost: 0 bytes in 0 blocks
==19065==    indirectly lost: 0 bytes in 0 blocks
==19065==      possibly lost: 0 bytes in 0 blocks
==19065==    still reachable: 0 bytes in 0 blocks
==19065==         suppressed: 72,704 bytes in 1 blocks
==19065== 
==19065== For counts of detected and suppressed errors, rerun with: -v
==19065== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.76 sec
----------------------------------------------------------
Test Passed.
"Fatalist.BothGradesHigher" end time: Nov 27 11:00 PST
"Fatalist.BothGradesHigher" time elapsed: 00:00:00
----------------------------------------------------------

55/61 Testing: Fatalist.NonConformantData
55/61 Test: Fatalist.NonConformantData
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.NonConformantData"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.NonConformantData" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19066== Memcheck, a memory error detector
==19066== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19066== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19066== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.NonConformantData
==19066== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.NonConformantData
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.NonConformantData
[       OK ] Fatalist.NonConformantData (25 ms)
[----------] 1 test from Fatalist (31 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (57 ms total)
[  PASSED  ] 1 test.
==19066== 
==19066== HEAP SUMMARY:
==19066==     in use at exit: 72,704 bytes in 1 blocks
==19066==   total heap usage: 256 allocs, 255 frees, 125,276 bytes allocated
==19066== 
==19066== LEAK SUMMARY:
==19066==    definitely lost: 0 bytes in 0 blocks
==19066==    indirectly lost: 0 bytes in 0 blocks
==19066==      possibly lost: 0 bytes in 0 blocks
==19066==    still reachable: 0 bytes in 0 blocks
==19066==         suppressed: 72,704 bytes in 1 blocks
==19066== 
==19066== For counts of detected and suppressed errors, rerun with: -v
==19066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.75 sec
----------------------------------------------------------
Test Passed.
"Fatalist.NonConformantData" end time: Nov 27 11:00 PST
"Fatalist.NonConformantData" time elapsed: 00:00:00
----------------------------------------------------------

56/61 Testing: Fatalist.LargerConformantGroup
56/61 Test: Fatalist.LargerConformantGroup
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.LargerConformantGroup"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.LargerConformantGroup" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19067== Memcheck, a memory error detector
==19067== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19067== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19067== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.LargerConformantGroup
==19067== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.LargerConformantGroup
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.LargerConformantGroup
[       OK ] Fatalist.LargerConformantGroup (47 ms)
[----------] 1 test from Fatalist (55 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (98 ms total)
[  PASSED  ] 1 test.
==19067== 
==19067== HEAP SUMMARY:
==19067==     in use at exit: 72,704 bytes in 1 blocks
==19067==   total heap usage: 256 allocs, 255 frees, 125,328 bytes allocated
==19067== 
==19067== LEAK SUMMARY:
==19067==    definitely lost: 0 bytes in 0 blocks
==19067==    indirectly lost: 0 bytes in 0 blocks
==19067==      possibly lost: 0 bytes in 0 blocks
==19067==    still reachable: 0 bytes in 0 blocks
==19067==         suppressed: 72,704 bytes in 1 blocks
==19067== 
==19067== For counts of detected and suppressed errors, rerun with: -v
==19067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.97 sec
----------------------------------------------------------
Test Passed.
"Fatalist.LargerConformantGroup" end time: Nov 27 11:00 PST
"Fatalist.LargerConformantGroup" time elapsed: 00:00:00
----------------------------------------------------------

57/61 Testing: Fatalist.LargerNonConformantGroup
57/61 Test: Fatalist.LargerNonConformantGroup
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.LargerNonConformantGroup"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.LargerNonConformantGroup" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19068== Memcheck, a memory error detector
==19068== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19068== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19068== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.LargerNonConformantGroup
==19068== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.LargerNonConformantGroup
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.LargerNonConformantGroup
[       OK ] Fatalist.LargerNonConformantGroup (23 ms)
[----------] 1 test from Fatalist (28 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (56 ms total)
[  PASSED  ] 1 test.
==19068== 
==19068== HEAP SUMMARY:
==19068==     in use at exit: 72,704 bytes in 1 blocks
==19068==   total heap usage: 256 allocs, 255 frees, 125,388 bytes allocated
==19068== 
==19068== LEAK SUMMARY:
==19068==    definitely lost: 0 bytes in 0 blocks
==19068==    indirectly lost: 0 bytes in 0 blocks
==19068==      possibly lost: 0 bytes in 0 blocks
==19068==    still reachable: 0 bytes in 0 blocks
==19068==         suppressed: 72,704 bytes in 1 blocks
==19068== 
==19068== For counts of detected and suppressed errors, rerun with: -v
==19068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.82 sec
----------------------------------------------------------
Test Passed.
"Fatalist.LargerNonConformantGroup" end time: Nov 27 11:00 PST
"Fatalist.LargerNonConformantGroup" time elapsed: 00:00:00
----------------------------------------------------------

58/61 Testing: Fatalist.VeryNonConformantGroup
58/61 Test: Fatalist.VeryNonConformantGroup
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=Fatalist.VeryNonConformantGroup"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"Fatalist.VeryNonConformantGroup" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19069== Memcheck, a memory error detector
==19069== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19069== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19069== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=Fatalist.VeryNonConformantGroup
==19069== 
Running main() from gtest_main.cc
Note: Google Test filter = Fatalist.VeryNonConformantGroup
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Fatalist
[ RUN      ] Fatalist.VeryNonConformantGroup
[       OK ] Fatalist.VeryNonConformantGroup (23 ms)
[----------] 1 test from Fatalist (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (62 ms total)
[  PASSED  ] 1 test.
==19069== 
==19069== HEAP SUMMARY:
==19069==     in use at exit: 72,704 bytes in 1 blocks
==19069==   total heap usage: 256 allocs, 255 frees, 125,348 bytes allocated
==19069== 
==19069== LEAK SUMMARY:
==19069==    definitely lost: 0 bytes in 0 blocks
==19069==    indirectly lost: 0 bytes in 0 blocks
==19069==      possibly lost: 0 bytes in 0 blocks
==19069==    still reachable: 0 bytes in 0 blocks
==19069==         suppressed: 72,704 bytes in 1 blocks
==19069== 
==19069== For counts of detected and suppressed errors, rerun with: -v
==19069== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.82 sec
----------------------------------------------------------
Test Passed.
"Fatalist.VeryNonConformantGroup" end time: Nov 27 11:00 PST
"Fatalist.VeryNonConformantGroup" time elapsed: 00:00:00
----------------------------------------------------------

59/61 Testing: FatalistStress.ConformantGroup
59/61 Test: FatalistStress.ConformantGroup
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=FatalistStress.ConformantGroup"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"FatalistStress.ConformantGroup" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19070== Memcheck, a memory error detector
==19070== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19070== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19070== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=FatalistStress.ConformantGroup
==19070== 
Running main() from gtest_main.cc
Note: Google Test filter = FatalistStress.ConformantGroup
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FatalistStress
[ RUN      ] FatalistStress.ConformantGroup
[       OK ] FatalistStress.ConformantGroup (53 ms)
[----------] 1 test from FatalistStress (59 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==19070== 
==19070== HEAP SUMMARY:
==19070==     in use at exit: 72,704 bytes in 1 blocks
==19070==   total heap usage: 265 allocs, 264 frees, 130,976 bytes allocated
==19070== 
==19070== LEAK SUMMARY:
==19070==    definitely lost: 0 bytes in 0 blocks
==19070==    indirectly lost: 0 bytes in 0 blocks
==19070==      possibly lost: 0 bytes in 0 blocks
==19070==    still reachable: 0 bytes in 0 blocks
==19070==         suppressed: 72,704 bytes in 1 blocks
==19070== 
==19070== For counts of detected and suppressed errors, rerun with: -v
==19070== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.77 sec
----------------------------------------------------------
Test Passed.
"FatalistStress.ConformantGroup" end time: Nov 27 11:00 PST
"FatalistStress.ConformantGroup" time elapsed: 00:00:00
----------------------------------------------------------

60/61 Testing: FatalistStress.NonConformantGroup
60/61 Test: FatalistStress.NonConformantGroup
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test" "--gtest_filter=FatalistStress.NonConformantGroup"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"FatalistStress.NonConformantGroup" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
==19071== Memcheck, a memory error detector
==19071== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19071== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19071== Command: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_test --gtest_filter=FatalistStress.NonConformantGroup
==19071== 
Running main() from gtest_main.cc
Note: Google Test filter = FatalistStress.NonConformantGroup
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FatalistStress
[ RUN      ] FatalistStress.NonConformantGroup
[       OK ] FatalistStress.NonConformantGroup (40 ms)
[----------] 1 test from FatalistStress (46 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (74 ms total)
[  PASSED  ] 1 test.
==19071== 
==19071== HEAP SUMMARY:
==19071==     in use at exit: 72,704 bytes in 1 blocks
==19071==   total heap usage: 265 allocs, 264 frees, 131,036 bytes allocated
==19071== 
==19071== LEAK SUMMARY:
==19071==    definitely lost: 0 bytes in 0 blocks
==19071==    indirectly lost: 0 bytes in 0 blocks
==19071==      possibly lost: 0 bytes in 0 blocks
==19071==    still reachable: 0 bytes in 0 blocks
==19071==         suppressed: 72,704 bytes in 1 blocks
==19071== 
==19071== For counts of detected and suppressed errors, rerun with: -v
==19071== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.89 sec
----------------------------------------------------------
Test Passed.
"FatalistStress.NonConformantGroup" end time: Nov 27 11:00 PST
"FatalistStress.NonConformantGroup" time elapsed: 00:00:00
----------------------------------------------------------

61/61 Testing: FatalistRuntime.FatalistHypothesis
61/61 Test: FatalistRuntime.FatalistHypothesis
Command: "/home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests/fatalist_runtime_test" "--gtest_filter=FatalistRuntime.FatalistHypothesis"
Directory: /home/cs104/cs104/hw-nyilkhan/hw5/hw5_tests/fatalist_tests
"FatalistRuntime.FatalistHypothesis" start time: Nov 27 11:00 PST
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = FatalistRuntime.FatalistHypothesis
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from FatalistRuntime
[ RUN      ] FatalistRuntime.FatalistHypothesis
>> Evaluating runtime of FatalistHypothesis()
Testing with 2^1 (2) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^2 (4) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^3 (8) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^4 (16) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^5 (32) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^6 (64) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^7 (128) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^8 (256) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^9 (512) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^10 (1024) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^11 (2048) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^12 (4096) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^13 (8192) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^14 (16384) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing with 2^15 (32768) elements (trial 1/40)2/40)3/40)4/40)5/40)6/40)7/40)8/40)9/40)10/40)11/40)12/40)13/40)14/40)15/40)16/40)17/40)18/40)19/40)20/40)21/40)22/40)23/40)24/40)25/40)26/40)27/40)28/40)29/40)30/40)31/40)32/40)33/40)34/40)35/40)36/40)37/40)38/40)39/40)40/40)
Testing if time complexity could be linear...
Correlation factor (2.7243) is >= threshold (1.4000)
>> Time complexity of FatalistHypothesis() is likely linear
Testing if time complexity could be constant...
Correlation factor (-3.0832) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Correlation factor (0.2715) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (0.8988) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (1.1144) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.6680) is < threshold (1.4000)
[       OK ] FatalistRuntime.FatalistHypothesis (1903 ms)
[----------] 1 test from FatalistRuntime (1903 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1903 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.91 sec
----------------------------------------------------------
Test Passed.
"FatalistRuntime.FatalistHypothesis" end time: Nov 27 11:01 PST
"FatalistRuntime.FatalistHypothesis" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Nov 27 11:01 PST
